{"dependencies":{"npm":{"websocket":"1.x.x","dot-object":"0.x.x"}},"nodeDefinitions":{"https://serve-chix.rhcloud.com/nodes/{ns}/{name}":{"websocket":{"client":{"_id":"533eef893c8d3cd858002db4","name":"client","ns":"websocket","description":"Websocket Client","async":true,"phrases":{"active":"Creating websocket client"},"ports":{"input":{"url":{"type":"string","title":"Url"},"protocol":{"title":"Protocol","type":"string","default":null},"send":{"title":"Send","type":"any","async":true}},"output":{"client":{"type":"WebSocket","title":"WebSocket"},"open":{"type":"any","title":"Open"},"close":{"type":"any","title":"Close"},"message":{"type":"any","title":"Message"},"error":{"type":"Object","title":"Error"}}},"dependencies":{"npm":{"websocket":"1.x.x"}},"fn":"on.input.send = function() {\n\n  console.log(state); if(!state.client) {\n\n    if(input.protocol) {\n      state.client = new websocket.w3cwebsocket(input.url, input.protocol);\n    } else {\n      state.client = new websocket.w3cwebsocket(input.url);\n    }\n\n    state.client.onmessage = function(event) {\n      output({ message: JSON.parse(event.data) });\n    };\n\n    state.client.onerror = function(event) {\n      output({ error: event });\n    };\n\n    state.client.onclose = function(event) {\n      output({ close: event });\n    };\n\n    state.client.onopen = function(event) {\n      output({\n        client: state.client,\n        open: event\n      });\n    };\n\n  }\n\n  if(state.client && state.client.readyState === state.client.OPEN) {\n    state.client.send(JSON.stringify(data));\n  } else {\n    // should revoke input && re-queue\n    return false;\n  }\n};\n","provider":"https://serve-chix.rhcloud.com/nodes/{ns}/{name}"}},"console":{"log":{"_id":"52645993df5da0102500004e","name":"log","ns":"console","description":"Console log","async":true,"phrases":{"active":"Logging to console"},"ports":{"input":{"msg":{"type":"any","title":"Log message","description":"Logs a message to the console","async":true,"required":true}},"output":{"out":{"type":"any","title":"Log message"}}},"fn":"on.input.msg = function() {\n  console.log(data);\n  output( { out: data });\n}\n","provider":"https://serve-chix.rhcloud.com/nodes/{ns}/{name}"},"error":{"_id":"5491085d0e9c46154a015c8e","name":"error","ns":"console","description":"Console Error","async":true,"phrases":{"active":"Logging error to console"},"ports":{"input":{"msg":{"type":"any","title":"Log message","description":"Logs an error message to the console","async":true,"required":true}},"output":{"out":{"type":"any","title":"Log message"}}},"fn":"on.input.msg = function() {\n  console.error(data);\n  output( { out: data });\n};\n","provider":"https://serve-chix.rhcloud.com/nodes/{ns}/{name}"}},"dom":{"querySelector":{"_id":"527299bb30b8af4b8910216b","name":"querySelector","ns":"dom","title":"querySelector","description":"[Document query selector](https://developer.mozilla.org/en-US/docs/Web/API/document.querySelector)","expose":["document"],"phrases":{"active":"Gathering elements matching criteria: {{input.selector}}"},"ports":{"input":{"element":{"title":"Element","type":"HTMLElement","default":null},"selector":{"title":"Selector","type":"string"}},"output":{"element":{"title":"Element","type":"HTMLElement"},"selection":{"title":"Selection","type":"HTMLElement"},"error":{"title":"Error","type":"Error"}}},"fn":"var el = input.element ? input.element : document;\noutput = {\n  element: el\n};\n\nvar selection = el.querySelector(input.selector);\nif(selection) {\n  output.selection = selection;\n} else {\n  output.error = Error('Selector ' + input.selector + ' did not match');\n}\n","provider":"https://serve-chix.rhcloud.com/nodes/{ns}/{name}"}},"object":{"router":{"_id":"5491419d0e9c46154a015c8f","name":"router","ns":"object","description":"Route packets based on a path, input index will result in same index on output. Route should be an array [path,match], multiple matchers can be added lik [[path,match],[path,match]] -> [0] route Router out [0] -> matched..","async":true,"dependencies":{"npm":{"dot-object":"0.x.x"}},"phrases":{"active":"Routing"},"ports":{"input":{"in":{"title":"Input Object","type":"object","async":true},"route":{"title":"Routes","type":"array"}},"output":{"out":{"title":"Route","type":"array","async":true},"missed":{"title":"Missed","type":"object"},"error":{"title":"Error","type":"Error"}}},"fn":"on.input.in = function(data) {\n\n  var out = [];\n  var reg;\n  var route;\n  for(var i = 0; i < input.route.length; i++) {\n    route = input.route[i];\n    if(route.length !== 2) {\n      output({\n        error: new Error('Route should be in the form [path,match]')\n      });\n    }\n    var res = dot_object().pick(route[0], data);\n    // err.. does pick remove the value?\n    if(undefined !== res) {\n      reg = new RegExp(route[1]);\n      if(reg.test(res)) {\n        out[i] = data; // send out the data, not the actual picked value.\n        output({out: out});\n        return true;\n      }\n    }\n  }\n\n  output({missed: data});\n\n};\n","provider":"https://serve-chix.rhcloud.com/nodes/{ns}/{name}"},"set":{"_id":"52ef3631cf8e1bab142d5399","name":"set","ns":"object","async":true,"description":"Set a property on an object, or else create a new object and set the property","phrases":{"active":"Setting property {{input.key}}"},"dependencies":{"npm":{"dot-object":"0.x.x"}},"ports":{"input":{"in":{"title":"Value","type":"any","async":true},"path":{"title":"Path","type":"string"},"object":{"title":"Object","type":"object","default":null}},"output":{"out":{"title":"out","type":"object"}}},"fn":"on.input.in = function(data) {\n  var obj = input.object ? input.object : {};\n  dot_object().set(input.path, data, obj);\n  output({out: obj});\n};\n","provider":"https://serve-chix.rhcloud.com/nodes/{ns}/{name}"}},"data":{"pick":{"_id":"527d857e83f0adcc47800e7c","name":"pick","ns":"data","title":"Pick","async":true,"description":"Pick one value from an object","phrases":{"active":"Picking {{input.path}} from object"},"ports":{"input":{"in":{"title":"Object","description":"An Object, e.g { name: { first: 'John', last: 'Doe' } }","type":"object","async":true},"path":{"title":"Path","description":"Specify a path with . syntax (e.g. name.last )","type":"string","required":true}},"output":{"out":{"title":"Output","type":"any"},"error":{"title":"Error","type":"Error"}}},"dependencies":{"npm":{"dot-object":"0.x.x"}},"fn":"on.input.in = function(data) {\n  // dot_object api should be fixed..\n  var res = dot_object().pick(input.path, data);\n  if(typeof res !== 'undefined') {\n    output({out: res});\n  } else {\n    output({error: Error(input.path + ' not found')});\n  }\n};\n","provider":"https://serve-chix.rhcloud.com/nodes/{ns}/{name}"}}}}}